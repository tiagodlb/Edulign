# Nome do workflow
name: Python CI

# Eventos que acionam o workflow
on:
  # Aciona quando há um push para a branch main
  push:
    branches: [ main ]
  # Aciona quando há um pull request para a branch main
  pull_request:
    branches: [ main ]

# Definição dos jobs do workflow
jobs:
  # Job de build e teste
  build:
    # Sistema operacional onde o job será executado
    runs-on: ubuntu-latest
    # Matriz de versões do Python para testar
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']

    # Passos do job
    steps:
    # Faz checkout do código
    - uses: actions/checkout@v4
    # Configura o ambiente Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    # Instala as dependências
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # Executa o linter flake8
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # Executa os testes com pytest e gera relatório de cobertura
    - name: Test with pytest and coverage
      run: |
        pytest --cov=./ --cov-report=xml
    # Faz upload do relatório de cobertura para o Codecov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
